// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Workshop.DB;

#nullable disable

namespace Workshop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Workshop.Models.Instrutor", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cpf");

                    b.ToTable("Instrutor");
                });

            modelBuilder.Entity("Workshop.Models.Workshop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoriaTexto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Categoria");

                    b.PrimitiveCollection<List<DateTime>>("Datas")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone[]");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstrutorCpf")
                        .HasColumnType("text");

                    b.Property<string>("ModalidadeTexto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Modalidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusTexto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.HasKey("ID");

                    b.HasIndex("InstrutorCpf");

                    b.ToTable("Workshop");
                });

            modelBuilder.Entity("Workshop.Models.Workshop", b =>
                {
                    b.HasOne("Workshop.Models.Instrutor", "Instrutor")
                        .WithMany()
                        .HasForeignKey("InstrutorCpf");

                    b.Navigation("Instrutor");
                });
#pragma warning restore 612, 618
        }
    }
}
