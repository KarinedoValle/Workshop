@using Workshop.Enums
@{
    ViewData["Title"] = "Workshops";
}

<div class="text-center">
    <h1 class="display-4">Workshops</h1>
</div>

<div class="text-end div">
    <button class="btn-custom" onclick="cadastrarItem()" )>Adicionar</button>
</div>


<div class="text-center">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrição</th>
                <th>Categoria</th>
                <th>Modalidade</th>
                <th>Datas</th>
                <th>Instrutor</th>
                <th>Status</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody id="data-container">
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            fetch('/api/workshop')
                .then(response => response.json())
                .then(data => {
                    const container = $('#data-container');
                    container.empty();
                    data.forEach(item => {
                        const formattedDates = item.datas.map(date => formatDate(new Date(date))).join(', ');
                        container.append(`
                          <tr data-id="${item.id}">
                                <td>${item.nome}</td>
                                <td>${item.descricao}</td>
                                <td>${item.categoria}</td>
                                <td>${item.modalidade}</td>
                                <td>${formattedDates}</td>
                                <td>${item.instrutor}</td>
                                <td>${item.status}</td>
                                <td><i class="fas fa-edit" onclick="editarItem(${item.id})"></i></td>
                                <td><i class="fas fa-trash-alt" onclick="deletarItem(${item.id}, '${item.nome}')"></i></td>
                            </tr>
                        `);
                    });
                })
                .catch(error => {
                    console.error('Erro ao buscar dados:', error);
                    container.append('<tr><td colspan="7">Erro ao buscar dados</td></tr>');
                });
        });


        function editarItem(id) {
            window.location.href = `/Cadastro/Workshop/${id}`;
        }

        function cadastrarItem() {
            window.location.href = `/Cadastro/Cadastrar`;
        }


        function deletarItem(id, nome) {
            if (!confirm(`Deseja deletar o workshop: ${nome}?`)) {
                return;
            }
            fetch(`/api/workshop/${id}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    document.querySelector(`tr[data-id="${id}"]`).remove();
                } else {
                    const contentType = response.headers.get('Content-Type');
                    if (contentType && contentType.includes('application/problem+json; charset=utf-8')){
                        return response.json().then(errorData => {
                            const erros = errorData.errors;
                            const mensagens = [];

                            for (let campo in erros) {
                                mensagens.push(erros[campo][0]);
                            }

                            alert(mensagens.join('\n'));
                            throw new Error(mensagens.join('\n'));
                        });
                    }
                    response.text().then(errorText => {
                    alert(`${errorText}`);
                    throw new Error(errorText);
                    });
                    throw new Error("Erro");
                }
            })
            .catch(error => console.error("Erro:", error));
        }
    </script>
}
